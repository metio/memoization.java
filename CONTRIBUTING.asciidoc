= Making a contribution

Just send me a pull request or open up a ticket & we will take it from there together.

== Building the project

[source]
----
$ git clone https://github.com/sebhoss/memoization.java.git
$ cd memoization.java
$ mvn install
----

== Labels

Labels are divided into categories by colons (":"). In case you want to know what each of them means, read the following:

=== Bug

The *Bug* category is used for anything that breaks something for a user.

* Bug: Blocker - used for tickets that must be resolved before the next release
* Bug: High - used for tickets that should be resolved before the next release
* Bug: Low - used for tickets that might be resolved before the next release

=== Cache

The *Cache* category is used to classify which cache implementation is used.

* Cache: Caffeine - used for tickets that are related to the Caffeine implementation
* Cache: ConcurrentMap - used for tickets that are related to the ConcurrentMap implementation
* Cache: Guava - used for tickets that are related to the Guava implementation
* Cache: JCache - used for tickets that are related to the JCache implementation

=== Component

The *Component* category is used to classify which part or component of the system is affected.

* Component: API - used for tickets that affect the API
* Component: Build - used for tickets that affect the build setup
* Component: Documentation - used for tickets that affect the documentation
* Component: Implementation - used for tickets that affect the implementation
* Component: Shared - used for tickets that affect the share code module
* Component: Test - used for tickets that affect the tests

=== Integration

The *Integration* category is used for a potential future addition that will provide something like `@Memoize` in order to memoize the call to a method.

* Integration: CDI - used for tickets that talk about integrating with CDI
* Integration: Guice - used for tickets that talk about integrating with Guice
* Integration: Spring - used for tickets that talk about integrating with Spring

=== Resolved

The *Resolved* category is used to capture how a ticket was resolved.

* Resolved: Closed - all necessary changes were performed, delivery will be part of the next release
* Resolved: Duplicate - changes were performed as part of another ticket, or will be in the future.
* Resolved: Invalid - ticket description contains nothing actionable
* Resolved: Wontfix - ticket description contains actionable change, but project owners won't perform the change (themselves)

=== Uncategorized

This final category contains any other label.

* question - used for tickets that deal with user questions rather than code changes
